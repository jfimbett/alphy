I am developing a Next.js application for private equity funds to be able to upload documents and have them
analyzed using Large Language Models. The application allows for signup/login, and some persistence of user data.
The application is built mostly using typescript, and uses a local postgres database for storing data, as well as some local storage 
in the folder of the application for large data.A normal workflow for a user is to upload a folder with documents, 
select the documents that the users wants analyzed, then the LLM first summarizes the document, then it identifies key variablesto extract, then
it extracts that information, and finally there is a consolidation step because it can happen that the same ocmpany appears in different documents. 

I need your help with the following things:

1. Sometimes a call to the LLM fails, this could be for many reasons but I need to be able to see it in order to debug it. 
for example I see this error some TestimonialsSlider
Response JSON Parse Error: SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at POST (file://C%3A/Users/jimbet/Documents/alphy/app/api/llm/route.tsx:94:26)
  92 |         }
  93 |
> 94 |         const data = JSON.parse(responseText);
     |                          ^
  95 |
  96 |         let content = '';
  97 |
 POST /api/llm 500 in 601093ms

 In order to better understand, I need you to create a log file, store it in a folder in the root folder of the project, in which 
 i can see all the conversation with the LLM and the application. Be explicit in showing me the model that is being used, the data that the user sends and the data that the LLM returns

 2. The companies page since the information that appears there is linked to a session, should also have the option 
 for the user to choose a session right there. 

 3. Is it possible to relate session ids with the name that the user has put to the session? For now is just numbers that are +1 every time. 

 3. The history page does not have the option to load a session, just to look at it, there could be an option enxt to each session item. 

 4. I am not seeing the consolidated information being saved in the session, this can be because I first save it before consolidating, and then 
 once its consolidated I am not sure it is being saved again. 


Here is the file structure of the project

|-- favicon.ico
|-- globals.css
|-- layout.tsx
|-- page.tsx
|-- types.ts
|-- data-aggregated
  |-- page.tsx
|-- companies
  |-- page.tsx
|-- settings
  |-- page.tsx
|-- login
  |-- page.tsx
|-- signup
  |-- page.tsx
|-- dashboard
  |-- page.tsx
  |-- useChat.tsx
  |-- useFileProcessing.tsx
  |-- utils
    |-- fileTreeHelpers.tsx
|-- data
  |-- page.tsx
  |-- [cik]
    |-- page.tsx
|-- history
  |-- page.tsx
  |-- [sessionId]
    |-- page.tsx
|-- api
  |-- company-facts
    |-- route.tsx
  |-- account-data
    |-- route.tsx
  |-- all-accounts
    |-- route.tsx
  |-- financial-data
    |-- route.tsx
  |-- countTokens
    |-- route.tsx
  |-- session-file
    |-- route.tsx
  |-- search
    |-- route.tsx
  |-- llm
    |-- route.tsx
  |-- submission-history
    |-- route.tsx
  |-- store-heavy-data
    |-- route.tsx
  |-- test
    |-- route.tsx
  |-- auth
    |-- login
      |-- route.tsx
    |-- signup
      |-- route.tsx
  |-- files
    |-- route.tsx
    |-- [fileId]
      |-- route.tsx
  |-- sessions
    |-- route.tsx
    |-- [sessionId]
      |-- route.tsx
  |-- uploads
    |-- route.tsx
    |-- [uploadId]
      |-- route.tsx
|-- AlphyAnimation.tsx
|-- AnalysisPreview.tsx
|-- ChatMessage.tsx
|-- CompanyInfoComponent.tsx
|-- CompanySearch.tsx
|-- ExtractedTextComponent.tsx
|-- FileTree.tsx
|-- FileUploader.tsx
|-- Footer.tsx
|-- Navbar.tsx
|-- SummaryContent.tsx
|-- TestimonialsSlider.tsx
|-- dashboard
  |-- ChatSection.tsx
  |-- FileAnalysisProgress.tsx
  |-- FilePreviewSection.tsx
  |-- FileUploadArea.tsx
  |-- LoadSessionModal.tsx
  |-- ModelSelector.tsx
  |-- RadioButtons.tsx
  |-- SaveSessionModal.tsx
  |-- SessionNameModal.tsx
|-- ui
  |-- card.tsx
  |-- command.tsx
  |-- company-facts-page.tsx
  |-- input.tsx
  |-- search-form.tsx
  |-- search-input.tsx
  |-- search-results.tsx
  |-- skeleton.tsx
  |-- spinner.tsx

plus some other standard files in a Next.js project.

Always return the code in a clear manner, commented, and using best practices. If you are not returning the entire code of 
the file you need to be extremely clear where I should incorporate that code. 

Here are the files you need 

{insert files here}
