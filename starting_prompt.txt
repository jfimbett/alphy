I am developing a Next.js application for private equity funds to be able to upload documents and have them
analyzed using Large Language Models. The application allows for signup/login, and some persistence of user data.
The application is built mostly using typescript, and uses a local postgres database for storing data, as well as some local storage 
in the folder of the application for large data. A normal workflow for a user is to upload a folder with documents, 
select the documents that the users wants analyzed, then the LLM first summarizes the document, then it identifies key variablesto extract, then
it extracts that information, and finally there is a consolidation step because it can happen that the same company 
appears in different documents. 

I need your help with the following things

1. The API keys are being created but I think they are not being stored. I think there is also a problem with the way the database is structured since im seeing this error

 GET /api/companies?action=manageKeys 500 in 132ms
 GET /api/sessions 200 in 188ms
 GET /api/store-heavy-data?sessionId=5 200 in 216ms
 GET /api/store-heavy-data?sessionId=5 200 in 88ms
 GET /companies?sessionId=5 200 in 39ms
API Key Error: error: column "key" does not exist
    at async GET (app/api/companies/route.ts:17:21)
  15 |       const userId = 'user_id_from_request'; // Implement proper auth
  16 |       const client = await pool.connect();
> 17 |       const result = await client.query(
     |                     ^
  18 |         'SELECT key, created_at FROM api_keys WHERE user_id = $1',
  19 |         [userId]
  20 |       ); {
  length: 102,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '8',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3657',
  routine: 'errorMissingColumn'
} 
 GET /api/companies?action=manageKeys 500 in 164ms
 GET /api/store-heavy-data?sessionId=5 200 in 170ms
 GET /api/sessions 200 in 175ms
 GET /api/sessions 200 in 175ms
 GET /api/store-heavy-data?sessionId=5 200 in 79ms
 GET /companies?sessionId=4 200 in 40ms
 GET /api/store-heavy-data?sessionId=4 200 in 143ms
 GET /settings 200 in 53ms
 GET /api/api-keys 401 in 35ms
 GET /api/api-keys?userId=1 401 in 34ms
 GET /api/api-keys?userId=1 401 in 36ms
 GET /api/api-keys 401 in 21ms

    

Here is the file structure of the project

|-- .env.local
|-- .gitignore
|-- README.md
|-- TODO.md
|-- eslint.config.mjs
|-- next-env.d.ts
|-- next.config.ts
|-- package.json
|-- pnpm-lock.yaml
|-- postcss.config.mjs
|-- prompt.py
|-- prompt.txt
|-- starting_prompt.txt
|-- tailwind.config.ts
|-- tsconfig.json
|-- .vscode
  |-- launch.json
|-- db
  |-- reset.sql
  |-- schema.sql
  |-- sec_financial_data.sql
  |-- testdata.sql
|-- lib
  |-- modelConfig.ts
  |-- prompts.ts
  |-- utils.tsx
|-- logs
  |-- debug-responses.jsonl
  |-- llm-logs.txt
|-- scripts
  |-- sync-data.ts
  |-- tsconfig_local.txt
|-- types
  |-- encoder.d.ts
|-- utils
  |-- db.tsx
  |-- localLLMs.tsx
|-- components
  |-- AlphyAnimation.tsx
  |-- AnalysisPreview.tsx
  |-- ChatMessage.tsx
  |-- CompanyInfoComponent.tsx
  |-- CompanySearch.tsx
  |-- ExtractedTextComponent.tsx
  |-- FileTree.tsx
  |-- FileUploader.tsx
  |-- Footer.tsx
  |-- Navbar.tsx
  |-- SummaryContent.tsx
  |-- TestimonialsSlider.tsx
  |-- dashboard
    |-- ChatSection.tsx
    |-- FileAnalysisProgress.tsx
    |-- FilePreviewSection.tsx
    |-- FileUploadArea.tsx
    |-- LoadSessionModal.tsx
    |-- ModelSelector.tsx
    |-- RadioButtons.tsx
    |-- SaveSessionModal.tsx
    |-- SessionNameModal.tsx
  |-- ui
    |-- card.tsx
    |-- command.tsx
    |-- company-facts-page.tsx
    |-- input.tsx
    |-- search-form.tsx
    |-- search-input.tsx
    |-- search-results.tsx
    |-- skeleton.tsx
    |-- spinner.tsx
|-- public
  |-- file.svg
  |-- globe.svg
  |-- next.svg
  |-- pdf.worker.mjs
  |-- vercel.svg
  |-- window.svg
  |-- images
    |-- testimonial-1.jpg
    |-- testimonial-2.jpg
    |-- testimonial-3.jpg
|-- app
  |-- favicon.ico
  |-- globals.css
  |-- layout.tsx
  |-- page.tsx
  |-- types.ts
  |-- companies
    |-- page.tsx
  |-- data-aggregated
    |-- page.tsx
  |-- settings
    |-- page.tsx
  |-- login
    |-- page.tsx
  |-- signup
    |-- page.tsx
  |-- dashboard
    |-- page.tsx
    |-- useChat.tsx
    |-- utils
      |-- utils.tsx
  |-- data
    |-- page.tsx
    |-- [cik]
      |-- page.tsx
  |-- history
    |-- page.tsx
    |-- [sessionId]
      |-- page.tsx
  |-- api
    |-- all-accounts
      |-- route.tsx
    |-- account-data
      |-- route.tsx
    |-- company-facts
      |-- route.tsx
    |-- countTokens
      |-- route.tsx
    |-- financial-data
      |-- route.tsx
    |-- api-keys
      |-- route.ts
    |-- companies
      |-- route.ts
    |-- llm
      |-- route.tsx
    |-- session-file
      |-- route.tsx
    |-- search
      |-- route.tsx
    |-- submission-history
      |-- route.tsx
    |-- store-heavy-data
      |-- route.tsx
    |-- test
      |-- route.tsx
    |-- auth
      |-- login
        |-- route.tsx
      |-- signup
        |-- route.tsx
    |-- files
      |-- route.tsx
      |-- [fileId]
        |-- route.tsx
    |-- sessions
      |-- route.tsx
      |-- [sessionId]
        |-- route.tsx
    |-- uploads
      |-- route.tsx
      |-- [uploadId]
        |-- route.tsx


plus some other standard files in a Next.js project.

Always return the code in a clear manner, commented, and using best practices. If you are not returning the entire code of 
the file you need to be extremely clear where I should incorporate that code. 

Here are the files you need 

{insert files here}
